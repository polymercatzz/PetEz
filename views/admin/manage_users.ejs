<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link
    href="https://fonts.googleapis.com/css2?family=Kanit:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
    rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
</head>

<body class="font-[kanit]">
  <%- include('../partials/admin-sidebar', { activeMenu: 'users' }) %>

  <div class="ml-0 lg:ml-[300px] px-4 py-6 bg-gray-50 min-h-screen">
    <div class="bg-white rounded-lg shadow-md p-6">
      <div class="flex justify-between items-center mb-6">
        <h1 class="text-3xl font-bold text-gray-800">Manage Users</h1>
        <div class="flex space-x-2">
          <input type="text" id="searchInput" placeholder="Search users..." 
                 class="px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
          <select id="filterRole" class="px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
            <option value="">All Roles</option>
            <option value="user">User</option>
            <option value="admin">Admin</option>
          </select>
        </div>
      </div>

      <!-- Users Table -->
      <div class="overflow-x-auto">
        <table class="min-w-full bg-white border border-gray-200">
          <thead class="bg-gray-50">
            <tr>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Joined</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
            </tr>
          </thead>
          <tbody id="usersTableBody" class="bg-white divide-y divide-gray-200">
            <!-- Users will be loaded here -->
            <tr>
              <td colspan="6" class="px-6 py-4 text-center text-gray-500">
                <div class="flex items-center justify-center">
                  <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500"></div>
                  <span class="ml-2">Loading users...</span>
                </div>
              </td>
            </tr>
          </tbody>
        </table>
      </div>

      <!-- Pagination -->
      <div class="flex items-center justify-between mt-6">
        <div class="text-sm text-gray-700">
          Showing <span id="showingFrom">0</span> to <span id="showingTo">0</span> of <span id="totalUsers">0</span> users
        </div>
        <div class="flex space-x-2" id="pagination">
          <!-- Pagination buttons will be generated here -->
        </div>
      </div>
    </div>
  </div>

  <!-- User Details Modal -->
  <div id="userModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
      <div class="mt-3 text-center">
        <h3 class="text-lg font-medium text-gray-900" id="modalTitle">User Details</h3>
        <div class="mt-2 px-7 py-3">
          <div id="modalContent" class="text-sm text-gray-500">
            <!-- User details will be loaded here -->
          </div>
        </div>
        <div class="items-center px-4 py-3">
          <button id="closeModal" class="px-4 py-2 bg-gray-500 text-white text-base font-medium rounded-md w-full shadow-sm hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-300">
            Close
          </button>
        </div>
      </div>
    </div>
  </div>

  <script>
    let currentPage = 1;
    let totalPages = 1;

    // Load users data
    async function loadUsers(page = 1, search = '', role = '') {
      try {
        const params = new URLSearchParams({
          page: page,
          limit: 10,
          search: search,
          role: role
        });

        const response = await fetch(`/admin/api/users?${params}`);
        if (response.ok) {
          const data = await response.json();
          displayUsers(data.users);
          updatePagination(data.pagination);
        } else {
          throw new Error('Failed to load users');
        }
      } catch (error) {
        console.error('Error loading users:', error);
        document.getElementById('usersTableBody').innerHTML = `
          <tr>
            <td colspan="6" class="px-6 py-4 text-center text-red-500">
              Error loading users. Please try again.
            </td>
          </tr>
        `;
      }
    }

    // Display users in table
    function displayUsers(users) {
      const tbody = document.getElementById('usersTableBody');
      if (users.length === 0) {
        tbody.innerHTML = `
          <tr>
            <td colspan="6" class="px-6 py-4 text-center text-gray-500">
              No users found.
            </td>
          </tr>
        `;
        return;
      }

      tbody.innerHTML = users.map(user => `
        <tr class="hover:bg-gray-50">
          <td class="px-6 py-4 whitespace-nowrap">
            <div class="flex items-center">
              <div class="flex-shrink-0 h-10 w-10">
                <img class="h-10 w-10 rounded-full" src="${user.profileImage || '/static/default-avatar.png'}" alt="">
              </div>
              <div class="ml-4">
                <div class="text-sm font-medium text-gray-900">${user.firstName} ${user.lastName}</div>
                <div class="text-sm text-gray-500">${user.phoneNumber || 'No phone'}</div>
              </div>
            </div>
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${user.email}</td>
          <td class="px-6 py-4 whitespace-nowrap">
            <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full ${user.role === 'admin' ? 'bg-purple-100 text-purple-800' : 'bg-blue-100 text-blue-800'}">
              ${user.role}
            </span>
          </td>
          <td class="px-6 py-4 whitespace-nowrap">
            <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full ${user.isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}">
              ${user.isActive ? 'Active' : 'Inactive'}
            </span>
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
            ${new Date(user.createdAt).toLocaleDateString()}
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
            <button onclick="viewUser(${user.id})" class="text-indigo-600 hover:text-indigo-900 mr-3">View</button>
            <button onclick="toggleUserStatus(${user.id})" class="text-${user.isActive ? 'red' : 'green'}-600 hover:text-${user.isActive ? 'red' : 'green'}-900">
              ${user.isActive ? 'Deactivate' : 'Activate'}
            </button>
          </td>
        </tr>
      `).join('');
    }

    // Update pagination
    function updatePagination(pagination) {
      currentPage = pagination.currentPage;
      totalPages = pagination.totalPages;
      
      document.getElementById('showingFrom').textContent = pagination.offset + 1;
      document.getElementById('showingTo').textContent = Math.min(pagination.offset + pagination.limit, pagination.total);
      document.getElementById('totalUsers').textContent = pagination.total;

      const paginationDiv = document.getElementById('pagination');
      let paginationHtml = '';

      // Previous button
      if (currentPage > 1) {
        paginationHtml += `<button onclick="loadUsers(${currentPage - 1})" class="px-3 py-2 text-sm bg-white border rounded hover:bg-gray-50">Previous</button>`;
      }

      // Page numbers
      for (let i = Math.max(1, currentPage - 2); i <= Math.min(totalPages, currentPage + 2); i++) {
        paginationHtml += `<button onclick="loadUsers(${i})" class="px-3 py-2 text-sm ${i === currentPage ? 'bg-blue-500 text-white' : 'bg-white text-gray-700'} border rounded hover:bg-gray-50">${i}</button>`;
      }

      // Next button
      if (currentPage < totalPages) {
        paginationHtml += `<button onclick="loadUsers(${currentPage + 1})" class="px-3 py-2 text-sm bg-white border rounded hover:bg-gray-50">Next</button>`;
      }

      paginationDiv.innerHTML = paginationHtml;
    }

    // View user details
    async function viewUser(userId) {
      try {
        const response = await fetch(`/admin/api/users/${userId}`);
        if (response.ok) {
          const user = await response.json();
          document.getElementById('modalTitle').textContent = `${user.firstName} ${user.lastName}`;
          document.getElementById('modalContent').innerHTML = `
            <div class="text-left space-y-2">
              <p><strong>Email:</strong> ${user.email}</p>
              <p><strong>Phone:</strong> ${user.phoneNumber || 'Not provided'}</p>
              <p><strong>Address:</strong> ${user.address || 'Not provided'}</p>
              <p><strong>Role:</strong> ${user.role}</p>
              <p><strong>Status:</strong> ${user.isActive ? 'Active' : 'Inactive'}</p>
              <p><strong>Joined:</strong> ${new Date(user.createdAt).toLocaleString()}</p>
            </div>
          `;
          document.getElementById('userModal').classList.remove('hidden');
        }
      } catch (error) {
        console.error('Error loading user details:', error);
      }
    }

    // Toggle user status
    async function toggleUserStatus(userId) {
      try {
        const response = await fetch(`/admin/api/users/${userId}/status`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          }
        });

        if (response.ok) {
          loadUsers(currentPage, document.getElementById('searchInput').value, document.getElementById('filterRole').value);
        } else {
          throw new Error('Failed to update user status');
        }
      } catch (error) {
        console.error('Error updating user status:', error);
        alert('Error updating user status');
      }
    }

    // Search and filter handlers
    document.getElementById('searchInput').addEventListener('input', (e) => {
      loadUsers(1, e.target.value, document.getElementById('filterRole').value);
    });

    document.getElementById('filterRole').addEventListener('change', (e) => {
      loadUsers(1, document.getElementById('searchInput').value, e.target.value);
    });

    // Close modal
    document.getElementById('closeModal').addEventListener('click', () => {
      document.getElementById('userModal').classList.add('hidden');
    });

    // Load users on page load
    document.addEventListener('DOMContentLoaded', () => {
      loadUsers();
    });
  </script>
</body>
</html>